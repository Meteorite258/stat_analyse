/* Generated by Yosys 0.32+0 (git sha1 105c44701, clang 14.0.0-1ubuntu1.1 -fPIC -Os) */

module baud(sys_clk, sys_rst_l, baud_clk);
  wire [23:0] _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire [6:0] _007_;
  wire _008_;
  wire [6:0] _009_;
  wire _010_;
  wire [6:0] _011_;
  wire _012_;
  wire [6:0] _013_;
  wire _014_;
  wire [6:0] _015_;
  wire _016_;
  wire [6:0] _017_;
  wire _018_;
  wire [6:0] _019_;
  wire _020_;
  wire [6:0] _021_;
  wire _022_;
  wire [6:0] _023_;
  wire _024_;
  wire [6:0] _025_;
  wire _026_;
  wire [6:0] _027_;
  wire _028_;
  wire [6:0] _029_;
  wire _030_;
  wire [6:0] _031_;
  wire _032_;
  wire [6:0] _033_;
  wire _034_;
  wire [6:0] _035_;
  wire _036_;
  wire [6:0] _037_;
  wire _038_;
  wire [6:0] _039_;
  wire _040_;
  wire [6:0] _041_;
  wire _042_;
  wire [6:0] _043_;
  wire _044_;
  wire [6:0] _045_;
  wire _046_;
  wire [6:0] _047_;
  wire _048_;
  wire [6:0] _049_;
  wire _050_;
  wire [6:0] _051_;
  wire _052_;
  wire [6:0] _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire [23:0] _082_;
  wire [23:0] _083_;
  output baud_clk;
  wire baud_clk;
  wire [23:0] clk_div;
  input sys_clk;
  wire sys_clk;
  input sys_rst_l;
  wire sys_rst_l;
  LUT6 #(
    .INIT(64'h8000000000000000)
  ) _084_ (
    .I0(_007_[5]),
    .I1(_007_[0]),
    .I2(_007_[1]),
    .I3(_007_[2]),
    .I4(_007_[3]),
    .I5(_007_[4]),
    .O(_055_)
  );
  MUXF7 _085_ (
    .I0(1'h0),
    .I1(1'h0),
    .O(_001_),
    .S(clk_div[10])
  );
  LUT6 #(
    .INIT(64'h0000000000000001)
  ) _086_ (
    .I0(clk_div[1]),
    .I1(clk_div[3]),
    .I2(clk_div[4]),
    .I3(clk_div[5]),
    .I4(clk_div[7]),
    .I5(clk_div[9]),
    .O(_003_)
  );
  MUXF7 _087_ (
    .I0(_003_),
    .I1(1'h0),
    .O(_002_),
    .S(clk_div[10])
  );
  MUXF8 _088_ (
    .I0(_001_),
    .I1(_002_),
    .O(_007_[5]),
    .S(clk_div[8])
  );
  LUT6 #(
    .INIT(64'h0000000000000001)
  ) _089_ (
    .I0(clk_div[11]),
    .I1(clk_div[12]),
    .I2(clk_div[13]),
    .I3(clk_div[14]),
    .I4(clk_div[15]),
    .I5(clk_div[16]),
    .O(_006_)
  );
  MUXF7 _090_ (
    .I0(_006_),
    .I1(1'h0),
    .O(_004_),
    .S(clk_div[17])
  );
  MUXF7 _091_ (
    .I0(1'h0),
    .I1(1'h0),
    .O(_005_),
    .S(clk_div[17])
  );
  MUXF8 _092_ (
    .I0(_004_),
    .I1(_005_),
    .O(_007_[0]),
    .S(clk_div[18])
  );
  LUT2 #(
    .INIT(4'h4)
  ) _093_ (
    .I0(clk_div[23]),
    .I1(clk_div[0]),
    .O(_007_[1])
  );
  LUT2 #(
    .INIT(4'h8)
  ) _094_ (
    .I0(clk_div[2]),
    .I1(clk_div[6]),
    .O(_007_[2])
  );
  LUT2 #(
    .INIT(4'h1)
  ) _095_ (
    .I0(clk_div[19]),
    .I1(clk_div[20]),
    .O(_007_[3])
  );
  LUT2 #(
    .INIT(4'h1)
  ) _096_ (
    .I0(clk_div[21]),
    .I1(clk_div[22]),
    .O(_007_[4])
  );
  LUT6 #(
    .INIT(64'h7fffffffffffffff)
  ) _097_ (
    .I0(_007_[0]),
    .I1(_007_[1]),
    .I2(_007_[2]),
    .I3(_007_[3]),
    .I4(_007_[4]),
    .I5(_007_[5]),
    .O(_008_)
  );
  MUXF7 _098_ (
    .I0(1'h0),
    .I1(_008_),
    .O(_000_[0]),
    .S(_007_[6])
  );
  LUT6 #(
    .INIT(64'h7fffffffffffffff)
  ) _099_ (
    .I0(_007_[0]),
    .I1(_007_[1]),
    .I2(_007_[2]),
    .I3(_007_[3]),
    .I4(_007_[4]),
    .I5(_007_[5]),
    .O(_010_)
  );
  MUXF7 _100_ (
    .I0(1'h0),
    .I1(_010_),
    .O(_000_[1]),
    .S(_009_[6])
  );
  LUT6 #(
    .INIT(64'h7fffffffffffffff)
  ) _101_ (
    .I0(_007_[0]),
    .I1(_007_[1]),
    .I2(_007_[2]),
    .I3(_007_[3]),
    .I4(_007_[4]),
    .I5(_007_[5]),
    .O(_012_)
  );
  MUXF7 _102_ (
    .I0(1'h0),
    .I1(_012_),
    .O(_000_[2]),
    .S(_011_[6])
  );
  LUT6 #(
    .INIT(64'h7fffffffffffffff)
  ) _103_ (
    .I0(_007_[0]),
    .I1(_007_[1]),
    .I2(_007_[2]),
    .I3(_007_[3]),
    .I4(_007_[4]),
    .I5(_007_[5]),
    .O(_014_)
  );
  MUXF7 _104_ (
    .I0(1'h0),
    .I1(_014_),
    .O(_000_[3]),
    .S(_013_[6])
  );
  LUT6 #(
    .INIT(64'h7fffffffffffffff)
  ) _105_ (
    .I0(_007_[0]),
    .I1(_007_[1]),
    .I2(_007_[2]),
    .I3(_007_[3]),
    .I4(_007_[4]),
    .I5(_007_[5]),
    .O(_016_)
  );
  MUXF7 _106_ (
    .I0(1'h0),
    .I1(_016_),
    .O(_000_[4]),
    .S(_015_[6])
  );
  LUT6 #(
    .INIT(64'h7fffffffffffffff)
  ) _107_ (
    .I0(_007_[0]),
    .I1(_007_[1]),
    .I2(_007_[2]),
    .I3(_007_[3]),
    .I4(_007_[4]),
    .I5(_007_[5]),
    .O(_018_)
  );
  MUXF7 _108_ (
    .I0(1'h0),
    .I1(_018_),
    .O(_000_[5]),
    .S(_017_[6])
  );
  LUT6 #(
    .INIT(64'h7fffffffffffffff)
  ) _109_ (
    .I0(_007_[0]),
    .I1(_007_[1]),
    .I2(_007_[2]),
    .I3(_007_[3]),
    .I4(_007_[4]),
    .I5(_007_[5]),
    .O(_020_)
  );
  MUXF7 _110_ (
    .I0(1'h0),
    .I1(_020_),
    .O(_000_[6]),
    .S(_019_[6])
  );
  LUT6 #(
    .INIT(64'h7fffffffffffffff)
  ) _111_ (
    .I0(_007_[0]),
    .I1(_007_[1]),
    .I2(_007_[2]),
    .I3(_007_[3]),
    .I4(_007_[4]),
    .I5(_007_[5]),
    .O(_022_)
  );
  MUXF7 _112_ (
    .I0(1'h0),
    .I1(_022_),
    .O(_000_[7]),
    .S(_021_[6])
  );
  LUT6 #(
    .INIT(64'h7fffffffffffffff)
  ) _113_ (
    .I0(_007_[0]),
    .I1(_007_[1]),
    .I2(_007_[2]),
    .I3(_007_[3]),
    .I4(_007_[4]),
    .I5(_007_[5]),
    .O(_024_)
  );
  MUXF7 _114_ (
    .I0(1'h0),
    .I1(_024_),
    .O(_000_[8]),
    .S(_023_[6])
  );
  LUT6 #(
    .INIT(64'h7fffffffffffffff)
  ) _115_ (
    .I0(_007_[0]),
    .I1(_007_[1]),
    .I2(_007_[2]),
    .I3(_007_[3]),
    .I4(_007_[4]),
    .I5(_007_[5]),
    .O(_026_)
  );
  MUXF7 _116_ (
    .I0(1'h0),
    .I1(_026_),
    .O(_000_[9]),
    .S(_025_[6])
  );
  LUT6 #(
    .INIT(64'h7fffffffffffffff)
  ) _117_ (
    .I0(_007_[0]),
    .I1(_007_[1]),
    .I2(_007_[2]),
    .I3(_007_[3]),
    .I4(_007_[4]),
    .I5(_007_[5]),
    .O(_028_)
  );
  MUXF7 _118_ (
    .I0(1'h0),
    .I1(_028_),
    .O(_000_[10]),
    .S(_027_[6])
  );
  LUT6 #(
    .INIT(64'h7fffffffffffffff)
  ) _119_ (
    .I0(_007_[0]),
    .I1(_007_[1]),
    .I2(_007_[2]),
    .I3(_007_[3]),
    .I4(_007_[4]),
    .I5(_007_[5]),
    .O(_030_)
  );
  MUXF7 _120_ (
    .I0(1'h0),
    .I1(_030_),
    .O(_000_[11]),
    .S(_029_[6])
  );
  LUT6 #(
    .INIT(64'h7fffffffffffffff)
  ) _121_ (
    .I0(_007_[0]),
    .I1(_007_[1]),
    .I2(_007_[2]),
    .I3(_007_[3]),
    .I4(_007_[4]),
    .I5(_007_[5]),
    .O(_032_)
  );
  MUXF7 _122_ (
    .I0(1'h0),
    .I1(_032_),
    .O(_000_[12]),
    .S(_031_[6])
  );
  LUT6 #(
    .INIT(64'h7fffffffffffffff)
  ) _123_ (
    .I0(_007_[0]),
    .I1(_007_[1]),
    .I2(_007_[2]),
    .I3(_007_[3]),
    .I4(_007_[4]),
    .I5(_007_[5]),
    .O(_034_)
  );
  MUXF7 _124_ (
    .I0(1'h0),
    .I1(_034_),
    .O(_000_[13]),
    .S(_033_[6])
  );
  LUT6 #(
    .INIT(64'h7fffffffffffffff)
  ) _125_ (
    .I0(_007_[0]),
    .I1(_007_[1]),
    .I2(_007_[2]),
    .I3(_007_[3]),
    .I4(_007_[4]),
    .I5(_007_[5]),
    .O(_036_)
  );
  MUXF7 _126_ (
    .I0(1'h0),
    .I1(_036_),
    .O(_000_[14]),
    .S(_035_[6])
  );
  LUT6 #(
    .INIT(64'h7fffffffffffffff)
  ) _127_ (
    .I0(_007_[0]),
    .I1(_007_[1]),
    .I2(_007_[2]),
    .I3(_007_[3]),
    .I4(_007_[4]),
    .I5(_007_[5]),
    .O(_038_)
  );
  MUXF7 _128_ (
    .I0(1'h0),
    .I1(_038_),
    .O(_000_[15]),
    .S(_037_[6])
  );
  LUT6 #(
    .INIT(64'h7fffffffffffffff)
  ) _129_ (
    .I0(_007_[0]),
    .I1(_007_[1]),
    .I2(_007_[2]),
    .I3(_007_[3]),
    .I4(_007_[4]),
    .I5(_007_[5]),
    .O(_040_)
  );
  MUXF7 _130_ (
    .I0(1'h0),
    .I1(_040_),
    .O(_000_[16]),
    .S(_039_[6])
  );
  LUT6 #(
    .INIT(64'h7fffffffffffffff)
  ) _131_ (
    .I0(_007_[0]),
    .I1(_007_[1]),
    .I2(_007_[2]),
    .I3(_007_[3]),
    .I4(_007_[4]),
    .I5(_007_[5]),
    .O(_042_)
  );
  MUXF7 _132_ (
    .I0(1'h0),
    .I1(_042_),
    .O(_000_[17]),
    .S(_041_[6])
  );
  LUT6 #(
    .INIT(64'h7fffffffffffffff)
  ) _133_ (
    .I0(_007_[0]),
    .I1(_007_[1]),
    .I2(_007_[2]),
    .I3(_007_[3]),
    .I4(_007_[4]),
    .I5(_007_[5]),
    .O(_044_)
  );
  MUXF7 _134_ (
    .I0(1'h0),
    .I1(_044_),
    .O(_000_[18]),
    .S(_043_[6])
  );
  LUT6 #(
    .INIT(64'h7fffffffffffffff)
  ) _135_ (
    .I0(_007_[0]),
    .I1(_007_[1]),
    .I2(_007_[2]),
    .I3(_007_[3]),
    .I4(_007_[4]),
    .I5(_007_[5]),
    .O(_046_)
  );
  MUXF7 _136_ (
    .I0(1'h0),
    .I1(_046_),
    .O(_000_[19]),
    .S(_045_[6])
  );
  LUT6 #(
    .INIT(64'h7fffffffffffffff)
  ) _137_ (
    .I0(_007_[0]),
    .I1(_007_[1]),
    .I2(_007_[2]),
    .I3(_007_[3]),
    .I4(_007_[4]),
    .I5(_007_[5]),
    .O(_048_)
  );
  MUXF7 _138_ (
    .I0(1'h0),
    .I1(_048_),
    .O(_000_[20]),
    .S(_047_[6])
  );
  LUT6 #(
    .INIT(64'h7fffffffffffffff)
  ) _139_ (
    .I0(_007_[0]),
    .I1(_007_[1]),
    .I2(_007_[2]),
    .I3(_007_[3]),
    .I4(_007_[4]),
    .I5(_007_[5]),
    .O(_050_)
  );
  MUXF7 _140_ (
    .I0(1'h0),
    .I1(_050_),
    .O(_000_[21]),
    .S(_049_[6])
  );
  LUT6 #(
    .INIT(64'h7fffffffffffffff)
  ) _141_ (
    .I0(_007_[0]),
    .I1(_007_[1]),
    .I2(_007_[2]),
    .I3(_007_[3]),
    .I4(_007_[4]),
    .I5(_007_[5]),
    .O(_052_)
  );
  MUXF7 _142_ (
    .I0(1'h0),
    .I1(_052_),
    .O(_000_[22]),
    .S(_051_[6])
  );
  LUT6 #(
    .INIT(64'h7fffffffffffffff)
  ) _143_ (
    .I0(_007_[0]),
    .I1(_007_[1]),
    .I2(_007_[2]),
    .I3(_007_[3]),
    .I4(_007_[4]),
    .I5(_007_[5]),
    .O(_054_)
  );
  MUXF7 _144_ (
    .I0(1'h0),
    .I1(_054_),
    .O(_000_[23]),
    .S(_053_[6])
  );
  INV _145_ (
    .I(sys_rst_l),
    .O(_056_)
  );
  INV _146_ (
    .I(clk_div[0]),
    .O(_083_[0])
  );
  INV _147_ (
    .I(baud_clk),
    .O(_081_)
  );
  INV _148_ (
    .I(sys_rst_l),
    .O(_057_)
  );
  INV _149_ (
    .I(sys_rst_l),
    .O(_058_)
  );
  INV _150_ (
    .I(sys_rst_l),
    .O(_059_)
  );
  INV _151_ (
    .I(sys_rst_l),
    .O(_060_)
  );
  INV _152_ (
    .I(sys_rst_l),
    .O(_061_)
  );
  INV _153_ (
    .I(sys_rst_l),
    .O(_062_)
  );
  INV _154_ (
    .I(sys_rst_l),
    .O(_063_)
  );
  INV _155_ (
    .I(sys_rst_l),
    .O(_064_)
  );
  INV _156_ (
    .I(sys_rst_l),
    .O(_065_)
  );
  INV _157_ (
    .I(sys_rst_l),
    .O(_066_)
  );
  INV _158_ (
    .I(sys_rst_l),
    .O(_067_)
  );
  INV _159_ (
    .I(sys_rst_l),
    .O(_068_)
  );
  INV _160_ (
    .I(sys_rst_l),
    .O(_069_)
  );
  INV _161_ (
    .I(sys_rst_l),
    .O(_070_)
  );
  INV _162_ (
    .I(sys_rst_l),
    .O(_071_)
  );
  INV _163_ (
    .I(sys_rst_l),
    .O(_072_)
  );
  INV _164_ (
    .I(sys_rst_l),
    .O(_073_)
  );
  INV _165_ (
    .I(sys_rst_l),
    .O(_074_)
  );
  INV _166_ (
    .I(sys_rst_l),
    .O(_075_)
  );
  INV _167_ (
    .I(sys_rst_l),
    .O(_076_)
  );
  INV _168_ (
    .I(sys_rst_l),
    .O(_077_)
  );
  INV _169_ (
    .I(sys_rst_l),
    .O(_078_)
  );
  INV _170_ (
    .I(sys_rst_l),
    .O(_079_)
  );
  INV _171_ (
    .I(sys_rst_l),
    .O(_080_)
  );
  CARRY4 _172_ (
    .CI(1'h0),
    .CO(_082_[3:0]),
    .CYINIT(1'h0),
    .DI(4'h1),
    .O({ _013_[6], _011_[6], _009_[6], _007_[6] }),
    .S({ clk_div[3:1], _083_[0] })
  );
  CARRY4 _173_ (
    .CI(_082_[3]),
    .CO(_082_[7:4]),
    .CYINIT(1'h0),
    .DI(4'h0),
    .O({ _021_[6], _019_[6], _017_[6], _015_[6] }),
    .S(clk_div[7:4])
  );
  CARRY4 _174_ (
    .CI(_082_[7]),
    .CO(_082_[11:8]),
    .CYINIT(1'h0),
    .DI(4'h0),
    .O({ _029_[6], _027_[6], _025_[6], _023_[6] }),
    .S(clk_div[11:8])
  );
  CARRY4 _175_ (
    .CI(_082_[11]),
    .CO(_082_[15:12]),
    .CYINIT(1'h0),
    .DI(4'h0),
    .O({ _037_[6], _035_[6], _033_[6], _031_[6] }),
    .S(clk_div[15:12])
  );
  CARRY4 _176_ (
    .CI(_082_[15]),
    .CO(_082_[19:16]),
    .CYINIT(1'h0),
    .DI(4'h0),
    .O({ _045_[6], _043_[6], _041_[6], _039_[6] }),
    .S(clk_div[19:16])
  );
  CARRY4 _177_ (
    .CI(_082_[19]),
    .CO(_082_[23:20]),
    .CYINIT(1'h0),
    .DI(4'h0),
    .O({ _053_[6], _051_[6], _049_[6], _047_[6] }),
    .S(clk_div[23:20])
  );
  FDCE #(
    .INIT(1'hx)
  ) _178_ (
    .C(sys_clk),
    .CE(_055_),
    .CLR(_056_),
    .D(_081_),
    .Q(baud_clk)
  );
  FDCE #(
    .INIT(1'hx)
  ) _179_ (
    .C(sys_clk),
    .CE(1'h1),
    .CLR(_057_),
    .D(_000_[0]),
    .Q(clk_div[0])
  );
  FDCE #(
    .INIT(1'hx)
  ) _180_ (
    .C(sys_clk),
    .CE(1'h1),
    .CLR(_058_),
    .D(_000_[1]),
    .Q(clk_div[1])
  );
  FDCE #(
    .INIT(1'hx)
  ) _181_ (
    .C(sys_clk),
    .CE(1'h1),
    .CLR(_059_),
    .D(_000_[2]),
    .Q(clk_div[2])
  );
  FDCE #(
    .INIT(1'hx)
  ) _182_ (
    .C(sys_clk),
    .CE(1'h1),
    .CLR(_060_),
    .D(_000_[3]),
    .Q(clk_div[3])
  );
  FDCE #(
    .INIT(1'hx)
  ) _183_ (
    .C(sys_clk),
    .CE(1'h1),
    .CLR(_061_),
    .D(_000_[4]),
    .Q(clk_div[4])
  );
  FDCE #(
    .INIT(1'hx)
  ) _184_ (
    .C(sys_clk),
    .CE(1'h1),
    .CLR(_062_),
    .D(_000_[5]),
    .Q(clk_div[5])
  );
  FDCE #(
    .INIT(1'hx)
  ) _185_ (
    .C(sys_clk),
    .CE(1'h1),
    .CLR(_063_),
    .D(_000_[6]),
    .Q(clk_div[6])
  );
  FDCE #(
    .INIT(1'hx)
  ) _186_ (
    .C(sys_clk),
    .CE(1'h1),
    .CLR(_064_),
    .D(_000_[7]),
    .Q(clk_div[7])
  );
  FDCE #(
    .INIT(1'hx)
  ) _187_ (
    .C(sys_clk),
    .CE(1'h1),
    .CLR(_065_),
    .D(_000_[8]),
    .Q(clk_div[8])
  );
  FDCE #(
    .INIT(1'hx)
  ) _188_ (
    .C(sys_clk),
    .CE(1'h1),
    .CLR(_066_),
    .D(_000_[9]),
    .Q(clk_div[9])
  );
  FDCE #(
    .INIT(1'hx)
  ) _189_ (
    .C(sys_clk),
    .CE(1'h1),
    .CLR(_067_),
    .D(_000_[10]),
    .Q(clk_div[10])
  );
  FDCE #(
    .INIT(1'hx)
  ) _190_ (
    .C(sys_clk),
    .CE(1'h1),
    .CLR(_068_),
    .D(_000_[11]),
    .Q(clk_div[11])
  );
  FDCE #(
    .INIT(1'hx)
  ) _191_ (
    .C(sys_clk),
    .CE(1'h1),
    .CLR(_069_),
    .D(_000_[12]),
    .Q(clk_div[12])
  );
  FDCE #(
    .INIT(1'hx)
  ) _192_ (
    .C(sys_clk),
    .CE(1'h1),
    .CLR(_070_),
    .D(_000_[13]),
    .Q(clk_div[13])
  );
  FDCE #(
    .INIT(1'hx)
  ) _193_ (
    .C(sys_clk),
    .CE(1'h1),
    .CLR(_071_),
    .D(_000_[14]),
    .Q(clk_div[14])
  );
  FDCE #(
    .INIT(1'hx)
  ) _194_ (
    .C(sys_clk),
    .CE(1'h1),
    .CLR(_072_),
    .D(_000_[15]),
    .Q(clk_div[15])
  );
  FDCE #(
    .INIT(1'hx)
  ) _195_ (
    .C(sys_clk),
    .CE(1'h1),
    .CLR(_073_),
    .D(_000_[16]),
    .Q(clk_div[16])
  );
  FDCE #(
    .INIT(1'hx)
  ) _196_ (
    .C(sys_clk),
    .CE(1'h1),
    .CLR(_074_),
    .D(_000_[17]),
    .Q(clk_div[17])
  );
  FDCE #(
    .INIT(1'hx)
  ) _197_ (
    .C(sys_clk),
    .CE(1'h1),
    .CLR(_075_),
    .D(_000_[18]),
    .Q(clk_div[18])
  );
  FDCE #(
    .INIT(1'hx)
  ) _198_ (
    .C(sys_clk),
    .CE(1'h1),
    .CLR(_076_),
    .D(_000_[19]),
    .Q(clk_div[19])
  );
  FDCE #(
    .INIT(1'hx)
  ) _199_ (
    .C(sys_clk),
    .CE(1'h1),
    .CLR(_077_),
    .D(_000_[20]),
    .Q(clk_div[20])
  );
  FDCE #(
    .INIT(1'hx)
  ) _200_ (
    .C(sys_clk),
    .CE(1'h1),
    .CLR(_078_),
    .D(_000_[21]),
    .Q(clk_div[21])
  );
  FDCE #(
    .INIT(1'hx)
  ) _201_ (
    .C(sys_clk),
    .CE(1'h1),
    .CLR(_079_),
    .D(_000_[22]),
    .Q(clk_div[22])
  );
  FDCE #(
    .INIT(1'hx)
  ) _202_ (
    .C(sys_clk),
    .CE(1'h1),
    .CLR(_080_),
    .D(_000_[23]),
    .Q(clk_div[23])
  );
  assign _041_[5:0] = _007_[5:0];
  assign _031_[5:0] = _007_[5:0];
  assign _019_[5:0] = _007_[5:0];
  assign _023_[5:0] = _007_[5:0];
  assign _027_[5:0] = _007_[5:0];
  assign _015_[5:0] = _007_[5:0];
  assign _029_[5:0] = _007_[5:0];
  assign _039_[5:0] = _007_[5:0];
  assign _045_[5:0] = _007_[5:0];
  assign _049_[5:0] = _007_[5:0];
  assign _013_[5:0] = _007_[5:0];
  assign _037_[5:0] = _007_[5:0];
  assign _011_[5:0] = _007_[5:0];
  assign _035_[5:0] = _007_[5:0];
  assign _009_[5:0] = _007_[5:0];
  assign _043_[5:0] = _007_[5:0];
  assign _033_[5:0] = _007_[5:0];
  assign _053_[5:0] = _007_[5:0];
  assign _047_[5:0] = _007_[5:0];
  assign _025_[5:0] = _007_[5:0];
  assign _051_[5:0] = _007_[5:0];
  assign _021_[5:0] = _007_[5:0];
  assign _083_[23:1] = clk_div[23:1];
  assign _017_[5:0] = _007_[5:0];
endmodule

module u_rec(sys_rst_l, sys_clk, uart_dataH, rec_dataH, rec_readyH);
  wire [3:0] _000_;
  wire [3:0] _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire [3:0] _025_;
  wire [3:0] _026_;
  wire [3:0] _027_;
  wire [3:0] _028_;
  wire [3:0] _029_;
  wire [3:0] _030_;
  wire [5:0] _031_;
  wire [2:0] _032_;
  wire [5:0] _033_;
  wire [1:0] _034_;
  wire [3:0] bitCell_cntrH;
  wire [2:0] next_state;
  wire [7:0] par_dataH;
  wire rec_datH;
  wire rec_datSyncH;
  output [7:0] rec_dataH;
  wire [7:0] rec_dataH;
  output rec_readyH;
  wire rec_readyH;
  wire rec_readyInH;
  wire [3:0] recd_bitCntrH;
  wire [2:0] state;
  input sys_clk;
  wire sys_clk;
  input sys_rst_l;
  wire sys_rst_l;
  input uart_dataH;
  wire uart_dataH;
  LUT3 #(
    .INIT(8'hc5)
  ) _035_ (
    .I0(state[0]),
    .I1(state[2]),
    .I2(state[1]),
    .O(_034_[0])
  );
  LUT4 #(
    .INIT(16'hf03b)
  ) _036_ (
    .I0(rec_datH),
    .I1(state[0]),
    .I2(state[2]),
    .I3(state[1]),
    .O(_002_)
  );
  LUT2 #(
    .INIT(4'h8)
  ) _037_ (
    .I0(_034_[0]),
    .I1(_027_[0]),
    .O(_001_[0])
  );
  LUT2 #(
    .INIT(4'h8)
  ) _038_ (
    .I0(_034_[0]),
    .I1(_027_[1]),
    .O(_001_[1])
  );
  LUT2 #(
    .INIT(4'h8)
  ) _039_ (
    .I0(_034_[0]),
    .I1(_027_[2]),
    .O(_001_[2])
  );
  LUT2 #(
    .INIT(4'h8)
  ) _040_ (
    .I0(_034_[0]),
    .I1(_027_[3]),
    .O(_001_[3])
  );
  LUT6 #(
    .INIT(64'h3030503300000000)
  ) _041_ (
    .I0(_031_[1]),
    .I1(_031_[0]),
    .I2(state[1]),
    .I3(state[0]),
    .I4(state[2]),
    .I5(_030_[0]),
    .O(_000_[0])
  );
  LUT4 #(
    .INIT(16'h4000)
  ) _042_ (
    .I0(bitCell_cntrH[0]),
    .I1(bitCell_cntrH[3]),
    .I2(bitCell_cntrH[1]),
    .I3(bitCell_cntrH[2]),
    .O(_031_[1])
  );
  LUT4 #(
    .INIT(16'h0100)
  ) _043_ (
    .I0(bitCell_cntrH[3]),
    .I1(bitCell_cntrH[0]),
    .I2(bitCell_cntrH[1]),
    .I3(bitCell_cntrH[2]),
    .O(_031_[0])
  );
  LUT6 #(
    .INIT(64'h3030503300000000)
  ) _044_ (
    .I0(_031_[1]),
    .I1(_031_[0]),
    .I2(state[1]),
    .I3(state[0]),
    .I4(state[2]),
    .I5(_030_[1]),
    .O(_000_[1])
  );
  LUT6 #(
    .INIT(64'h3030503300000000)
  ) _045_ (
    .I0(_031_[1]),
    .I1(_031_[0]),
    .I2(state[1]),
    .I3(state[0]),
    .I4(state[2]),
    .I5(_030_[2]),
    .O(_000_[2])
  );
  LUT6 #(
    .INIT(64'h3030503300000000)
  ) _046_ (
    .I0(_031_[1]),
    .I1(_031_[0]),
    .I2(state[1]),
    .I3(state[0]),
    .I4(state[2]),
    .I5(_030_[3]),
    .O(_000_[3])
  );
  LUT6 #(
    .INIT(64'hffffffffffffffb0)
  ) _047_ (
    .I0(_033_[0]),
    .I1(_031_[1]),
    .I2(_032_[2]),
    .I3(_033_[3]),
    .I4(state[2]),
    .I5(rec_readyInH),
    .O(next_state[0])
  );
  LUT2 #(
    .INIT(4'h8)
  ) _048_ (
    .I0(state[1]),
    .I1(state[0]),
    .O(_032_[2])
  );
  LUT4 #(
    .INIT(16'h0100)
  ) _049_ (
    .I0(recd_bitCntrH[0]),
    .I1(recd_bitCntrH[1]),
    .I2(recd_bitCntrH[2]),
    .I3(recd_bitCntrH[3]),
    .O(_033_[0])
  );
  LUT5 #(
    .INIT(32'd16777216)
  ) _050_ (
    .I0(bitCell_cntrH[3]),
    .I1(bitCell_cntrH[0]),
    .I2(bitCell_cntrH[1]),
    .I3(state[1]),
    .I4(bitCell_cntrH[2]),
    .O(_033_[3])
  );
  LUT6 #(
    .INIT(64'h0000ffff303f50ff)
  ) _051_ (
    .I0(_031_[0]),
    .I1(_031_[1]),
    .I2(state[1]),
    .I3(rec_datH),
    .I4(state[0]),
    .I5(state[2]),
    .O(next_state[1])
  );
  LUT3 #(
    .INIT(8'h40)
  ) _052_ (
    .I0(state[2]),
    .I1(_031_[1]),
    .I2(_032_[2]),
    .O(next_state[2])
  );
  LUT4 #(
    .INIT(16'hca0c)
  ) _053_ (
    .I0(state[0]),
    .I1(rec_datH),
    .I2(state[1]),
    .I3(state[2]),
    .O(rec_readyInH)
  );
  INV _054_ (
    .I(sys_rst_l),
    .O(_003_)
  );
  INV _055_ (
    .I(recd_bitCntrH[0]),
    .O(_026_[0])
  );
  INV _056_ (
    .I(bitCell_cntrH[0]),
    .O(_029_[0])
  );
  INV _057_ (
    .I(sys_rst_l),
    .O(_004_)
  );
  INV _058_ (
    .I(sys_rst_l),
    .O(_005_)
  );
  INV _059_ (
    .I(sys_rst_l),
    .O(_006_)
  );
  INV _060_ (
    .I(sys_rst_l),
    .O(_007_)
  );
  INV _061_ (
    .I(sys_rst_l),
    .O(_008_)
  );
  INV _062_ (
    .I(sys_rst_l),
    .O(_009_)
  );
  INV _063_ (
    .I(sys_rst_l),
    .O(_010_)
  );
  INV _064_ (
    .I(sys_rst_l),
    .O(_011_)
  );
  INV _065_ (
    .I(sys_rst_l),
    .O(_012_)
  );
  INV _066_ (
    .I(sys_rst_l),
    .O(_013_)
  );
  INV _067_ (
    .I(sys_rst_l),
    .O(_014_)
  );
  INV _068_ (
    .I(sys_rst_l),
    .O(_015_)
  );
  INV _069_ (
    .I(sys_rst_l),
    .O(_016_)
  );
  INV _070_ (
    .I(sys_rst_l),
    .O(_017_)
  );
  INV _071_ (
    .I(sys_rst_l),
    .O(_018_)
  );
  INV _072_ (
    .I(sys_rst_l),
    .O(_019_)
  );
  INV _073_ (
    .I(sys_rst_l),
    .O(_020_)
  );
  INV _074_ (
    .I(sys_rst_l),
    .O(_021_)
  );
  INV _075_ (
    .I(sys_rst_l),
    .O(_022_)
  );
  INV _076_ (
    .I(sys_rst_l),
    .O(_023_)
  );
  INV _077_ (
    .I(sys_rst_l),
    .O(_024_)
  );
  CARRY4 _078_ (
    .CI(1'h0),
    .CO(_025_),
    .CYINIT(1'h0),
    .DI(4'h1),
    .O(_027_),
    .S({ recd_bitCntrH[3:1], _026_[0] })
  );
  CARRY4 _079_ (
    .CI(1'h0),
    .CO(_028_),
    .CYINIT(1'h0),
    .DI(4'h1),
    .O(_030_),
    .S({ bitCell_cntrH[3:1], _029_[0] })
  );
  FDCE #(
    .INIT(1'hx)
  ) _080_ (
    .C(sys_clk),
    .CE(1'h1),
    .CLR(_003_),
    .D(rec_readyInH),
    .Q(rec_readyH)
  );
  FDPE #(
    .INIT(1'hx)
  ) _081_ (
    .C(sys_clk),
    .CE(1'h1),
    .D(next_state[0]),
    .PRE(_004_),
    .Q(state[0])
  );
  FDCE #(
    .INIT(1'hx)
  ) _082_ (
    .C(sys_clk),
    .CE(1'h1),
    .CLR(_005_),
    .D(next_state[1]),
    .Q(state[1])
  );
  FDCE #(
    .INIT(1'hx)
  ) _083_ (
    .C(sys_clk),
    .CE(1'h1),
    .CLR(_006_),
    .D(next_state[2]),
    .Q(state[2])
  );
  FDCE #(
    .INIT(1'hx)
  ) _084_ (
    .C(sys_clk),
    .CE(_002_),
    .CLR(_007_),
    .D(_001_[0]),
    .Q(recd_bitCntrH[0])
  );
  FDCE #(
    .INIT(1'hx)
  ) _085_ (
    .C(sys_clk),
    .CE(_002_),
    .CLR(_008_),
    .D(_001_[1]),
    .Q(recd_bitCntrH[1])
  );
  FDCE #(
    .INIT(1'hx)
  ) _086_ (
    .C(sys_clk),
    .CE(_002_),
    .CLR(_009_),
    .D(_001_[2]),
    .Q(recd_bitCntrH[2])
  );
  FDCE #(
    .INIT(1'hx)
  ) _087_ (
    .C(sys_clk),
    .CE(_002_),
    .CLR(_010_),
    .D(_001_[3]),
    .Q(recd_bitCntrH[3])
  );
  FDCE #(
    .INIT(1'hx)
  ) _088_ (
    .C(sys_clk),
    .CE(1'h1),
    .CLR(_011_),
    .D(_000_[0]),
    .Q(bitCell_cntrH[0])
  );
  FDCE #(
    .INIT(1'hx)
  ) _089_ (
    .C(sys_clk),
    .CE(1'h1),
    .CLR(_012_),
    .D(_000_[1]),
    .Q(bitCell_cntrH[1])
  );
  FDCE #(
    .INIT(1'hx)
  ) _090_ (
    .C(sys_clk),
    .CE(1'h1),
    .CLR(_013_),
    .D(_000_[2]),
    .Q(bitCell_cntrH[2])
  );
  FDCE #(
    .INIT(1'hx)
  ) _091_ (
    .C(sys_clk),
    .CE(1'h1),
    .CLR(_014_),
    .D(_000_[3]),
    .Q(bitCell_cntrH[3])
  );
  FDPE #(
    .INIT(1'hx)
  ) _092_ (
    .C(sys_clk),
    .CE(1'h1),
    .D(rec_datSyncH),
    .PRE(_015_),
    .Q(rec_datH)
  );
  FDPE #(
    .INIT(1'hx)
  ) _093_ (
    .C(sys_clk),
    .CE(1'h1),
    .D(uart_dataH),
    .PRE(_016_),
    .Q(rec_datSyncH)
  );
  FDCE #(
    .INIT(1'hx)
  ) _094_ (
    .C(sys_clk),
    .CE(_034_[0]),
    .CLR(_017_),
    .D(par_dataH[1]),
    .Q(par_dataH[0])
  );
  FDCE #(
    .INIT(1'hx)
  ) _095_ (
    .C(sys_clk),
    .CE(_034_[0]),
    .CLR(_018_),
    .D(par_dataH[2]),
    .Q(par_dataH[1])
  );
  FDCE #(
    .INIT(1'hx)
  ) _096_ (
    .C(sys_clk),
    .CE(_034_[0]),
    .CLR(_019_),
    .D(par_dataH[3]),
    .Q(par_dataH[2])
  );
  FDCE #(
    .INIT(1'hx)
  ) _097_ (
    .C(sys_clk),
    .CE(_034_[0]),
    .CLR(_020_),
    .D(par_dataH[4]),
    .Q(par_dataH[3])
  );
  FDCE #(
    .INIT(1'hx)
  ) _098_ (
    .C(sys_clk),
    .CE(_034_[0]),
    .CLR(_021_),
    .D(par_dataH[5]),
    .Q(par_dataH[4])
  );
  FDCE #(
    .INIT(1'hx)
  ) _099_ (
    .C(sys_clk),
    .CE(_034_[0]),
    .CLR(_022_),
    .D(par_dataH[6]),
    .Q(par_dataH[5])
  );
  FDCE #(
    .INIT(1'hx)
  ) _100_ (
    .C(sys_clk),
    .CE(_034_[0]),
    .CLR(_023_),
    .D(par_dataH[7]),
    .Q(par_dataH[6])
  );
  FDCE #(
    .INIT(1'hx)
  ) _101_ (
    .C(sys_clk),
    .CE(_034_[0]),
    .CLR(_024_),
    .D(rec_datH),
    .Q(par_dataH[7])
  );
  assign _031_[5:2] = { state[2], state[0], rec_datH, state[1] };
  assign _034_[1] = _027_[3];
  assign { _033_[5:4], _033_[2:1] } = { rec_readyInH, state[2], _032_[2], _031_[1] };
  assign _032_[1:0] = { _031_[1], state[2] };
  assign _026_[3:1] = recd_bitCntrH[3:1];
  assign _029_[3:1] = bitCell_cntrH[3:1];
  assign rec_dataH = par_dataH;
endmodule

module u_xmit(sys_clk, sys_rst_l, uart_xmitH, xmitH, xmit_dataH, xmit_doneH);
  wire [4:0] _000_;
  wire [3:0] _001_;
  wire [7:0] _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire [4:0] _032_;
  wire [4:0] _033_;
  wire [4:0] _034_;
  wire [7:0] _035_;
  wire [7:0] _036_;
  wire [3:0] _037_;
  wire [3:0] _038_;
  wire [3:0] _039_;
  wire _040_;
  wire [1:0] _041_;
  wire [5:0] _042_;
  wire [1:0] _043_;
  wire [4:0] bitCell_cntrH;
  wire [3:0] bitCountH;
  wire [2:0] next_state;
  wire [2:0] state;
  input sys_clk;
  wire sys_clk;
  input sys_rst_l;
  wire sys_rst_l;
  output uart_xmitH;
  wire uart_xmitH;
  input xmitH;
  wire xmitH;
  wire [7:0] xmit_ShiftRegH;
  input [7:0] xmit_dataH;
  wire [7:0] xmit_dataH;
  output xmit_doneH;
  wire xmit_doneH;
  wire xmit_doneInH;
  LUT4 #(
    .INIT(16'hcf32)
  ) _044_ (
    .I0(xmitH),
    .I1(state[1]),
    .I2(state[0]),
    .I3(state[2]),
    .O(_009_)
  );
  LUT6 #(
    .INIT(64'h3f3300000a003b33)
  ) _045_ (
    .I0(state[0]),
    .I1(xmitH),
    .I2(_042_[0]),
    .I3(_042_[1]),
    .I4(state[1]),
    .I5(state[2]),
    .O(_010_)
  );
  LUT5 #(
    .INIT(32'd268435456)
  ) _046_ (
    .I0(bitCell_cntrH[4]),
    .I1(bitCell_cntrH[0]),
    .I2(bitCell_cntrH[1]),
    .I3(bitCell_cntrH[2]),
    .I4(bitCell_cntrH[3]),
    .O(_042_[1])
  );
  LUT4 #(
    .INIT(16'h0100)
  ) _047_ (
    .I0(bitCountH[0]),
    .I1(bitCountH[1]),
    .I2(bitCountH[2]),
    .I3(bitCountH[3]),
    .O(_042_[0])
  );
  LUT2 #(
    .INIT(4'h4)
  ) _048_ (
    .I0(_043_[0]),
    .I1(_039_[0]),
    .O(_001_[0])
  );
  LUT3 #(
    .INIT(8'h41)
  ) _049_ (
    .I0(xmitH),
    .I1(state[2]),
    .I2(state[1]),
    .O(_043_[0])
  );
  LUT2 #(
    .INIT(4'h4)
  ) _050_ (
    .I0(_043_[0]),
    .I1(_039_[1]),
    .O(_001_[1])
  );
  LUT2 #(
    .INIT(4'h4)
  ) _051_ (
    .I0(_043_[0]),
    .I1(_039_[2]),
    .O(_001_[2])
  );
  LUT2 #(
    .INIT(4'h4)
  ) _052_ (
    .I0(_043_[0]),
    .I1(_039_[3]),
    .O(_001_[3])
  );
  LUT5 #(
    .INIT(32'd2899102892)
  ) _053_ (
    .I0(xmit_dataH[0]),
    .I1(xmit_ShiftRegH[1]),
    .I2(xmitH),
    .I3(state[1]),
    .I4(state[2]),
    .O(_002_[0])
  );
  LUT5 #(
    .INIT(32'd2899102892)
  ) _054_ (
    .I0(xmit_dataH[1]),
    .I1(xmit_ShiftRegH[2]),
    .I2(xmitH),
    .I3(state[1]),
    .I4(state[2]),
    .O(_002_[1])
  );
  LUT5 #(
    .INIT(32'd2899102892)
  ) _055_ (
    .I0(xmit_dataH[2]),
    .I1(xmit_ShiftRegH[3]),
    .I2(xmitH),
    .I3(state[1]),
    .I4(state[2]),
    .O(_002_[2])
  );
  LUT5 #(
    .INIT(32'd2899102892)
  ) _056_ (
    .I0(xmit_dataH[3]),
    .I1(xmit_ShiftRegH[4]),
    .I2(xmitH),
    .I3(state[1]),
    .I4(state[2]),
    .O(_002_[3])
  );
  LUT5 #(
    .INIT(32'd2899102892)
  ) _057_ (
    .I0(xmit_dataH[4]),
    .I1(xmit_ShiftRegH[5]),
    .I2(xmitH),
    .I3(state[1]),
    .I4(state[2]),
    .O(_002_[4])
  );
  LUT5 #(
    .INIT(32'd2899102892)
  ) _058_ (
    .I0(xmit_dataH[5]),
    .I1(xmit_ShiftRegH[6]),
    .I2(xmitH),
    .I3(state[1]),
    .I4(state[2]),
    .O(_002_[5])
  );
  LUT5 #(
    .INIT(32'd2899102892)
  ) _059_ (
    .I0(xmit_dataH[6]),
    .I1(xmit_ShiftRegH[7]),
    .I2(xmitH),
    .I3(state[1]),
    .I4(state[2]),
    .O(_002_[6])
  );
  LUT2 #(
    .INIT(4'h4)
  ) _060_ (
    .I0(_041_[0]),
    .I1(_034_[0]),
    .O(_000_[0])
  );
  LUT2 #(
    .INIT(4'h1)
  ) _061_ (
    .I0(state[1]),
    .I1(state[0]),
    .O(_005_)
  );
  LUT2 #(
    .INIT(4'h1)
  ) _062_ (
    .I0(state[1]),
    .I1(state[0]),
    .O(_006_)
  );
  MUXF7 _063_ (
    .I0(_005_),
    .I1(_006_),
    .O(_003_),
    .S(bitCell_cntrH[2])
  );
  LUT2 #(
    .INIT(4'h1)
  ) _064_ (
    .I0(state[1]),
    .I1(state[0]),
    .O(_007_)
  );
  LUT6 #(
    .INIT(64'h040b575d00005555)
  ) _065_ (
    .I0(state[1]),
    .I1(state[2]),
    .I2(bitCell_cntrH[4]),
    .I3(bitCell_cntrH[0]),
    .I4(state[0]),
    .I5(bitCell_cntrH[1]),
    .O(_008_)
  );
  MUXF7 _066_ (
    .I0(_007_),
    .I1(_008_),
    .O(_004_),
    .S(bitCell_cntrH[2])
  );
  MUXF8 _067_ (
    .I0(_003_),
    .I1(_004_),
    .O(_041_[0]),
    .S(bitCell_cntrH[3])
  );
  LUT2 #(
    .INIT(4'h4)
  ) _068_ (
    .I0(_041_[0]),
    .I1(_034_[1]),
    .O(_000_[1])
  );
  LUT2 #(
    .INIT(4'h4)
  ) _069_ (
    .I0(_041_[0]),
    .I1(_034_[2]),
    .O(_000_[2])
  );
  LUT2 #(
    .INIT(4'h4)
  ) _070_ (
    .I0(_041_[0]),
    .I1(_034_[3]),
    .O(_000_[3])
  );
  LUT2 #(
    .INIT(4'h4)
  ) _071_ (
    .I0(_041_[0]),
    .I1(_034_[4]),
    .O(_000_[4])
  );
  LUT6 #(
    .INIT(64'h00ffffffb0b0f000)
  ) _072_ (
    .I0(_042_[0]),
    .I1(_042_[1]),
    .I2(state[1]),
    .I3(_042_[3]),
    .I4(state[0]),
    .I5(state[2]),
    .O(next_state[0])
  );
  LUT5 #(
    .INIT(32'd1073741824)
  ) _073_ (
    .I0(bitCell_cntrH[4]),
    .I1(bitCell_cntrH[0]),
    .I2(bitCell_cntrH[1]),
    .I3(bitCell_cntrH[2]),
    .I4(bitCell_cntrH[3]),
    .O(_042_[3])
  );
  LUT5 #(
    .INIT(32'd255791018)
  ) _074_ (
    .I0(xmitH),
    .I1(_042_[1]),
    .I2(state[0]),
    .I3(state[2]),
    .I4(state[1]),
    .O(next_state[1])
  );
  LUT5 #(
    .INIT(32'd260571136)
  ) _075_ (
    .I0(_042_[1]),
    .I1(state[1]),
    .I2(_042_[3]),
    .I3(state[2]),
    .I4(state[0]),
    .O(next_state[2])
  );
  LUT5 #(
    .INIT(32'd260571151)
  ) _076_ (
    .I0(_042_[3]),
    .I1(state[0]),
    .I2(xmitH),
    .I3(state[1]),
    .I4(state[2]),
    .O(xmit_doneInH)
  );
  LUT4 #(
    .INIT(16'h2c0b)
  ) _077_ (
    .I0(xmit_ShiftRegH[0]),
    .I1(state[2]),
    .I2(state[1]),
    .I3(state[0]),
    .O(uart_xmitH)
  );
  INV _078_ (
    .I(sys_rst_l),
    .O(_011_)
  );
  INV _079_ (
    .I(bitCountH[0]),
    .O(_038_[0])
  );
  INV _080_ (
    .I(bitCell_cntrH[0]),
    .O(_033_[0])
  );
  INV _081_ (
    .I(sys_rst_l),
    .O(_012_)
  );
  INV _082_ (
    .I(sys_rst_l),
    .O(_013_)
  );
  INV _083_ (
    .I(sys_rst_l),
    .O(_014_)
  );
  INV _084_ (
    .I(sys_rst_l),
    .O(_015_)
  );
  INV _085_ (
    .I(sys_rst_l),
    .O(_016_)
  );
  INV _086_ (
    .I(sys_rst_l),
    .O(_017_)
  );
  INV _087_ (
    .I(sys_rst_l),
    .O(_018_)
  );
  INV _088_ (
    .I(sys_rst_l),
    .O(_019_)
  );
  INV _089_ (
    .I(sys_rst_l),
    .O(_020_)
  );
  INV _090_ (
    .I(sys_rst_l),
    .O(_021_)
  );
  INV _091_ (
    .I(sys_rst_l),
    .O(_022_)
  );
  INV _092_ (
    .I(sys_rst_l),
    .O(_023_)
  );
  INV _093_ (
    .I(sys_rst_l),
    .O(_024_)
  );
  INV _094_ (
    .I(sys_rst_l),
    .O(_025_)
  );
  INV _095_ (
    .I(sys_rst_l),
    .O(_026_)
  );
  INV _096_ (
    .I(sys_rst_l),
    .O(_027_)
  );
  INV _097_ (
    .I(sys_rst_l),
    .O(_028_)
  );
  INV _098_ (
    .I(sys_rst_l),
    .O(_029_)
  );
  INV _099_ (
    .I(sys_rst_l),
    .O(_030_)
  );
  INV _100_ (
    .I(sys_rst_l),
    .O(_031_)
  );
  CARRY4 _101_ (
    .CI(1'h0),
    .CO(_032_[3:0]),
    .CYINIT(1'h0),
    .DI(4'h1),
    .O(_034_[3:0]),
    .S({ bitCell_cntrH[3:1], _033_[0] })
  );
  CARRY4 _102_ (
    .CI(_032_[3]),
    .CO({ _035_[7:5], _032_[4] }),
    .CYINIT(1'h0),
    .DI(4'h0),
    .O({ _036_[7:5], _034_[4] }),
    .S({ 3'h0, bitCell_cntrH[4] })
  );
  CARRY4 _103_ (
    .CI(1'h0),
    .CO(_037_),
    .CYINIT(1'h0),
    .DI(4'h1),
    .O(_039_),
    .S({ bitCountH[3:1], _038_[0] })
  );
  FDCE #(
    .INIT(1'hx)
  ) _104_ (
    .C(sys_clk),
    .CE(1'h1),
    .CLR(_011_),
    .D(xmit_doneInH),
    .Q(xmit_doneH)
  );
  FDCE #(
    .INIT(1'hx)
  ) _105_ (
    .C(sys_clk),
    .CE(1'h1),
    .CLR(_012_),
    .D(next_state[0]),
    .Q(state[0])
  );
  FDCE #(
    .INIT(1'hx)
  ) _106_ (
    .C(sys_clk),
    .CE(1'h1),
    .CLR(_013_),
    .D(next_state[1]),
    .Q(state[1])
  );
  FDCE #(
    .INIT(1'hx)
  ) _107_ (
    .C(sys_clk),
    .CE(1'h1),
    .CLR(_014_),
    .D(next_state[2]),
    .Q(state[2])
  );
  FDCE #(
    .INIT(1'hx)
  ) _108_ (
    .C(sys_clk),
    .CE(_010_),
    .CLR(_015_),
    .D(_001_[0]),
    .Q(bitCountH[0])
  );
  FDCE #(
    .INIT(1'hx)
  ) _109_ (
    .C(sys_clk),
    .CE(_010_),
    .CLR(_016_),
    .D(_001_[1]),
    .Q(bitCountH[1])
  );
  FDCE #(
    .INIT(1'hx)
  ) _110_ (
    .C(sys_clk),
    .CE(_010_),
    .CLR(_017_),
    .D(_001_[2]),
    .Q(bitCountH[2])
  );
  FDCE #(
    .INIT(1'hx)
  ) _111_ (
    .C(sys_clk),
    .CE(_010_),
    .CLR(_018_),
    .D(_001_[3]),
    .Q(bitCountH[3])
  );
  FDCE #(
    .INIT(1'hx)
  ) _112_ (
    .C(sys_clk),
    .CE(1'h1),
    .CLR(_019_),
    .D(_000_[0]),
    .Q(bitCell_cntrH[0])
  );
  FDCE #(
    .INIT(1'hx)
  ) _113_ (
    .C(sys_clk),
    .CE(1'h1),
    .CLR(_020_),
    .D(_000_[1]),
    .Q(bitCell_cntrH[1])
  );
  FDCE #(
    .INIT(1'hx)
  ) _114_ (
    .C(sys_clk),
    .CE(1'h1),
    .CLR(_021_),
    .D(_000_[2]),
    .Q(bitCell_cntrH[2])
  );
  FDCE #(
    .INIT(1'hx)
  ) _115_ (
    .C(sys_clk),
    .CE(1'h1),
    .CLR(_022_),
    .D(_000_[3]),
    .Q(bitCell_cntrH[3])
  );
  FDCE #(
    .INIT(1'hx)
  ) _116_ (
    .C(sys_clk),
    .CE(1'h1),
    .CLR(_023_),
    .D(_000_[4]),
    .Q(bitCell_cntrH[4])
  );
  FDCE #(
    .INIT(1'hx)
  ) _117_ (
    .C(sys_clk),
    .CE(_009_),
    .CLR(_024_),
    .D(_002_[0]),
    .Q(xmit_ShiftRegH[0])
  );
  FDCE #(
    .INIT(1'hx)
  ) _118_ (
    .C(sys_clk),
    .CE(_009_),
    .CLR(_025_),
    .D(_002_[1]),
    .Q(xmit_ShiftRegH[1])
  );
  FDCE #(
    .INIT(1'hx)
  ) _119_ (
    .C(sys_clk),
    .CE(_009_),
    .CLR(_026_),
    .D(_002_[2]),
    .Q(xmit_ShiftRegH[2])
  );
  FDCE #(
    .INIT(1'hx)
  ) _120_ (
    .C(sys_clk),
    .CE(_009_),
    .CLR(_027_),
    .D(_002_[3]),
    .Q(xmit_ShiftRegH[3])
  );
  FDCE #(
    .INIT(1'hx)
  ) _121_ (
    .C(sys_clk),
    .CE(_009_),
    .CLR(_028_),
    .D(_002_[4]),
    .Q(xmit_ShiftRegH[4])
  );
  FDCE #(
    .INIT(1'hx)
  ) _122_ (
    .C(sys_clk),
    .CE(_009_),
    .CLR(_029_),
    .D(_002_[5]),
    .Q(xmit_ShiftRegH[5])
  );
  FDCE #(
    .INIT(1'hx)
  ) _123_ (
    .C(sys_clk),
    .CE(_009_),
    .CLR(_030_),
    .D(_002_[6]),
    .Q(xmit_ShiftRegH[6])
  );
  FDCE #(
    .INIT(1'hx)
  ) _124_ (
    .C(sys_clk),
    .CE(1'h1),
    .CLR(_031_),
    .D(_040_),
    .Q(xmit_ShiftRegH[7])
  );
  LUT6 #(
    .INIT(64'hf0aabbf0ffaabbee)
  ) _125_ (
    .I0(xmit_ShiftRegH[7]),
    .I1(state[0]),
    .I2(xmit_dataH[7]),
    .I3(state[2]),
    .I4(state[1]),
    .I5(xmitH),
    .O(_040_)
  );
  assign { _042_[5:4], _042_[2] } = { state[2], state[0], state[1] };
  assign _043_[1] = _039_[0];
  assign _041_[1] = _034_[1];
  assign _033_[4:1] = bitCell_cntrH[4:1];
  assign _035_[4:0] = _032_;
  assign _036_[4:0] = _034_;
  assign _038_[3:1] = bitCountH[3:1];
endmodule

module uart(sys_clk, sys_rst_l, uart_clk, uart_XMIT_dataH, xmitH, xmit_dataH, xmit_doneH, uart_REC_dataH, rec_dataH, rec_readyH);
  wire _00_;
  wire _01_;
  wire [7:0] _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire [7:0] _10_;
  wire _11_;
  output [7:0] rec_dataH;
  wire [7:0] rec_dataH;
  output rec_readyH;
  wire rec_readyH;
  input sys_clk;
  wire sys_clk;
  input sys_rst_l;
  wire sys_rst_l;
  input uart_REC_dataH;
  wire uart_REC_dataH;
  output uart_XMIT_dataH;
  wire uart_XMIT_dataH;
  output uart_clk;
  wire uart_clk;
  input xmitH;
  wire xmitH;
  input [7:0] xmit_dataH;
  wire [7:0] xmit_dataH;
  output xmit_doneH;
  wire xmit_doneH;
  BUFG _12_ (
    .I(_00_),
    .O(_04_)
  );
  BUFG _13_ (
    .I(_01_),
    .O(_08_)
  );
  OBUF _14_ (
    .I(_02_[0]),
    .O(rec_dataH[0])
  );
  OBUF _15_ (
    .I(_02_[1]),
    .O(rec_dataH[1])
  );
  OBUF _16_ (
    .I(_02_[2]),
    .O(rec_dataH[2])
  );
  OBUF _17_ (
    .I(_02_[3]),
    .O(rec_dataH[3])
  );
  OBUF _18_ (
    .I(_02_[4]),
    .O(rec_dataH[4])
  );
  OBUF _19_ (
    .I(_02_[5]),
    .O(rec_dataH[5])
  );
  OBUF _20_ (
    .I(_02_[6]),
    .O(rec_dataH[6])
  );
  OBUF _21_ (
    .I(_02_[7]),
    .O(rec_dataH[7])
  );
  OBUF _22_ (
    .I(_03_),
    .O(rec_readyH)
  );
  IBUF _23_ (
    .I(sys_clk),
    .O(_00_)
  );
  IBUF _24_ (
    .I(sys_rst_l),
    .O(_05_)
  );
  IBUF _25_ (
    .I(uart_REC_dataH),
    .O(_06_)
  );
  OBUF _26_ (
    .I(_07_),
    .O(uart_XMIT_dataH)
  );
  OBUF _27_ (
    .I(_08_),
    .O(uart_clk)
  );
  IBUF _28_ (
    .I(xmitH),
    .O(_09_)
  );
  IBUF _29_ (
    .I(xmit_dataH[0]),
    .O(_10_[0])
  );
  IBUF _30_ (
    .I(xmit_dataH[1]),
    .O(_10_[1])
  );
  IBUF _31_ (
    .I(xmit_dataH[2]),
    .O(_10_[2])
  );
  IBUF _32_ (
    .I(xmit_dataH[3]),
    .O(_10_[3])
  );
  IBUF _33_ (
    .I(xmit_dataH[4]),
    .O(_10_[4])
  );
  IBUF _34_ (
    .I(xmit_dataH[5]),
    .O(_10_[5])
  );
  IBUF _35_ (
    .I(xmit_dataH[6]),
    .O(_10_[6])
  );
  IBUF _36_ (
    .I(xmit_dataH[7]),
    .O(_10_[7])
  );
  OBUF _37_ (
    .I(_11_),
    .O(xmit_doneH)
  );
  baud iBAUD (
    .baud_clk(_01_),
    .sys_clk(_04_),
    .sys_rst_l(_05_)
  );
  u_rec iRECEIVER (
    .rec_dataH(_02_),
    .rec_readyH(_03_),
    .sys_clk(_08_),
    .sys_rst_l(_05_),
    .uart_dataH(_06_)
  );
  u_xmit iXMIT (
    .sys_clk(_08_),
    .sys_rst_l(_05_),
    .uart_xmitH(_07_),
    .xmitH(_09_),
    .xmit_dataH(_10_),
    .xmit_doneH(_11_)
  );
endmodule
